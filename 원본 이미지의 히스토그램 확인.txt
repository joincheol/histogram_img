let img;
let histogram;

function preload() {
  img = loadImage("https://raw.githubusercontent.com/joincheol/histogram_img/main/test_img2.jpg");
}

function setup() {
  createCanvas(1200, 800);

  // 이미지를 그리기 전에 히스토그램 계산
  histogram = calculateHistogram(img);

  // 이미지 그리기
  image(img, 0, 0, width / 3, height/3);

  // 히스토그램 그리기
  drawHistogram(histogram, width / 3, 0, width / 3, height/3);
}

function draw() {
}

function calculateHistogram(img) {
  // 히스토그램을 계산하기 위한 빈 배열 초기화
  let histogram = new Array(256).fill(0);

  // 이미지의 모든 픽셀을 순회하면서 히스토그램 업데이트
  img.loadPixels();
  for (let i = 0; i < img.pixels.length; i += 4) {
    // 이미지 픽셀 데이터는 RGBA 형식으로 저장됩니다.
    // 그레이스케일 이미지를 가정하고 R, G, B 값 중 하나를 사용하여 픽셀의 밝기를 계산합니다.
    let brightness = img.pixels[i]; // R 값

    // 히스토그램 업데이트
    histogram[brightness]++;
  }

  return histogram;
}

function drawHistogram(histogram, x, y, w, h) {
  // 히스토그램을 그리는 함수
  let maxCount = max(histogram);
  stroke(0);
  fill(150);
  for (let i = 0; i < histogram.length; i++) {
    // 각 밝기 값에 해당하는 히스토그램 막대 그리기
    let x1 = map(i, 0, 255, x, x + w);
    let y1 = map(histogram[i], 0, maxCount, y + h, y);
    let barWidth = w / 256;
    rect(x1, y1, barWidth, h - y1);
  }
}
